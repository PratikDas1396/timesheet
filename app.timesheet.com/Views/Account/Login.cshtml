@model app.timesheet.com.LoginViewModel
@{
    Html.EnableUnobtrusiveJavaScript();
    Layout = "";
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Assets/plugins/notyf/notyf.min.css" rel="stylesheet" />
    <link href="~/Content/dark.css" rel="stylesheet" />
    <link href="~/Assets/css/app.css" rel="stylesheet" />
    <title>Sign In</title>
</head>
<body>
    <main class="content d-flex p-0">
        <div class="container d-flex flex-column">
            <div class="row h-100">
                <div class="col-sm-10 col-md-8 col-lg-6 mx-auto d-table h-100">
                    <div class="d-table-cell align-middle">
                        <div class="text-center">
                            <img src="~/Assets/svg/logo1.svg" alt="Chris Wood" class="img-fluid rounded-circle" width="132" height="132">
                            <h1>Time-Sheet</h1>
                        </div>

                        <div class="text-center mt-4">
                            @*<h1 class="h1">Welcome</h1>*@
                            <p class="lead">
                                Sign in to your account to continue
                            </p>
                        </div>
                        <div class="card">
                            <div class="card-body">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="m-sm-4">
                                    <form id="loginForm">
                                        <div class="form-group">
                                            <label>User ID</label>
                                            @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control", id = "inputEmail", autocomplete = "off", autofocus = "true" } })
                                            @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label>Password</label>
                                            @Html.EditorFor(model => model.UserPin, new { htmlAttributes = new { @class = "form-control", type = "password", id = "inputPassword", autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.UserPin, "", new { @class = "text-danger" })
                                            <div>
                                                <small>
                                                    @*<a href="pages-reset-password.html">Forgot password?</a>*@
                                                    @Html.ActionLink("Forgot password?", "Forget", "Account")
                                                </small>
                                            </div>
                                        </div>
                                        <div>
                                            <div class="custom-control custom-checkbox align-items-center">
                                                @Html.CheckBoxFor(model => model.RememberMe,
                                               htmlAttributes: new { @class = "custom-control-input", value = "remember-me", name = "remember-me", @id= "remember_chk" })
                                                <label class="custom-control-label text-small" for="remember_chk">Remember me next time</label>
                                            </div>
                                        </div>
                                        <div class="text-center mt-3">
                                            <input type="button" id="btnAuth" value="Login" class="btn btn-primary btn-block" />
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
    <script src="~/Scripts/jquery-3.5.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Assets/plugins/notyf/notyf.min.js"></script>

    <script>
        $(document).ready(function () {
            $("#btnAuth").on("click", function () {
                var form = $("#loginForm");
                if (!form.valid()) {
                    return;
                }
                Authenticate(form.serialize(), onSuccess);
            });
        })

        function onSuccess(data) {
            const notifier = getNotifier();
            if (data["isError"]) {
                notifier.error(data["message"]);
                return;
            }
            else {
                notifier.success(data["message"]);
                window.location.href = window.location.origin + "/Home/Index";
            }
        }

        function Authenticate(data, callback) {
            const model = ConvertURIToJson(data);
            const controller = "@Url.Action("Authenticate", "Account")";
            $.ajax({
                type: "POST",
                url: controller,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                data: JSON.stringify(model),
                success: function (data) {
                    callback(data)
                },
                error: function () {
                    getNotifier().error("Something Went Wrong");
                }
            });
        }

        function ConvertURIToJson(data) {
            const uri = decodeURIComponent(data)
            let obj = {};
            uri.split('&').map((x, i) => {
                const [key, value] = x.split('=');
                obj[key] = value
            })
            return obj;
        }


        function getNotifier() {
            return new Notyf({
                duration: 4000,
                dismissible: true,
                position: {
                    'x': 'right',
                    'y': 'top'
                }
            });;
        }

    </script>
</body>
</html>
